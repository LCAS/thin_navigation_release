#!/usr/bin/env python
PACKAGE = "thin_navigation"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("Ktv", double_t, 0, "Translational velocity gain", 3.0)
gen.add("Krv", double_t, 0, "Rotational velocity gain", 1.0)
gen.add("repulsive_t_scale", double_t, 0, "Repulsive translational scale", 3.0)
gen.add("repulsive_r_scale", double_t, 0, "Repulsive rotational scale", 1.0)
#gen.add("max_tv", double_t, 0, "Maximum translational velocity", 0.75)
#gen.add("max_rv", double_t, 0, "Maximum rotational velocity", 0.5)
#gen.add("max_t_acc", double_t, 0, "Maximum translational acceleration", 0.05)
#gen.add("max_r_acc", double_t, 0, "Maximum rotational acceleration", 0.05)
gen.add("min_attractor_distance", double_t, 0, "Minimum attractor distance", 0.5)
gen.add("max_attractor_distance", double_t, 0, "Maximum attractor distance", 5.0)
#gen.add("robot_radius", double_t, 0, "Robot radius", 0.3)
#gen.add("safety_threshold", double_t, 0, "Safety threshold", 0.3)
#gen.add("distance_cost_factor", double_t, 0, "Distance cost factor", 0.5)
#gen.add("distance_threshold", double_t, 0, "Distance threshold", 2.0)
gen.add("persistency", int_t, 0, "Persistency", 300)
gen.add("goal_tolerance_t", double_t, 0, "Goal tolerance translation", 0.0)
gen.add("goal_tolerance_r", double_t, 0, "Goal tolerance rotation", 0.0)
#gen.add("forced_max_range", double_t, 0, "Forced maximum range", 10)
#gen.add("squared_endpoint_distance", double_t, 0, "Squared endpoint distance", 0.01)
gen.add("wait_cicle", int_t, 0, "Wait cicle", 100)

exit(gen.generate(PACKAGE, "thin_navigation", "ThinNavigation"))
